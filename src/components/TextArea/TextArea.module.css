.text-area {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;

  font-style: normal;
  text-align: start;
  font-family: var(--default-font-family);
  font-weight: var(--font-weight-regular);

  /* Allows the `resize` property to work on the div */
  overflow: hidden;

  /* Size */
  padding: var(--text-area-border-width);
  min-height: var(--text-area-min-height);
  border-radius: var(--text-area-border-radius);

  /* Variant */

  /* Blend inner shadow with page background */
  background-clip: content-box;
  background-color: var(--color-surface);
  color: var(--gray-12);

  box-shadow: inset 0 0 0 var(--text-field-border-width) var(--border-color-base);
}

.text-area-input {
  border-radius: inherit;
  resize: none;

  display: block;
  width: 100%;
  flex-grow: 1;

  /* Size */

  /* Clip text to border */
  --text-area-padding-y: calc(var(--space-1) * 1.5 - var(--text-area-border-width));
  --text-area-padding-x: calc(var(--space-2) - var(--text-area-border-width));

  padding: var(--text-area-padding-y) var(--text-area-padding-x);

  font-size: var(--font-size-2);
  line-height: var(--line-height-2);

  /* Scroll */

  /* Arrow mouse cursor over the scrollbar */
  cursor: auto;
}

/* Resize */

.resize-none {
  resize: none;
}

.resize-vertical {
  resize: vertical;
}

.resize-horizontal {
  resize: horizontal;
}

.resize-both {
  resize: both;
}

/* Selection */

.text-area-input::selection {
  background-color: var(--text-field-selection-color);
}

/* Scrollbar */

.text-area-input::-webkit-scrollbar {
  width: var(--space-3);
  height: var(--space-3);
}

.text-area-input::-webkit-scrollbar-track,
.text-area-input::-webkit-scrollbar-thumb {
  background-clip: content-box;
  border: var(--space-1) solid transparent;
  border-radius: var(--space-3);
}

.text-area-input::-webkit-scrollbar-track {
  background-color: var(--gray-a3);
}

.text-area-input::-webkit-scrollbar-thumb {
  background-color: var(--gray-a8);
}

.text-area-input:where(&:not(:disabled))::-webkit-scrollbar-thumb:hover {
  background-color: var(--gray-a9);
}

.text-area-input:where(:autofill) {
  /* Reliably removes native autofill colors */
  background-clip: text;
  -webkit-text-fill-color: var(--gray-12);
}

/* Focus */

.text-area:focus-within {
  outline-offset: var(--outline-offset);
  outline: var(--outline-focus-border-width) solid var(--text-area-focus-color);
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

.text-area:where(:has(.text-area-input:where(:autofill):not(:disabled, :read-only))) {
  /* Blend with focus color */
  background-image: linear-gradient(var(--focus-a2), var(--focus-a2));
  box-shadow: inset 0 0 0 1px var(--focus-a5), inset 0 0 0 1px var(--gray-a5);
}

.text-area:where(:has(.text-area-input:where(:disabled, :read-only))) {
  /* Blend with grey */
  background-image: linear-gradient(var(--gray-a2), var(--gray-a2));
  box-shadow: inset 0 0 0 var(--text-area-border-width) var(--gray-a6);
}

/* all disabled and read-only text-areas */
.text-area-input:where(:disabled, :read-only) {
  cursor: text;
  color: var(--gray-a11);

  /* Safari */
  -webkit-text-fill-color: var(--gray-a11);
}

.text-area-input:where(:disabled, :read-only)::placeholder {
  opacity: 0.5;
  cursor: var(--cursor-disabled);
}

.text-area-input:where(:disabled, :read-only)::selection {
  background-color: var(--gray-a5);
}

.text-area:where(
    :focus-within:has(.text-area-input:where(:disabled, :read-only))
  ) {
  outline-color: var(--gray-8);
}
